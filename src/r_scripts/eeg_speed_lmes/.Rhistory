f2m = (r2_out[1]-r2_outalt[1])/(1-r2_out[1]);
f2c = (r2_out[2]-r2_outalt[2])/(1-r2_out[2]);
print(str_glue("r2m: {round(r2m,4)},\tr2c: {round(r2c,4)}\n\n"))
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
vals = data.frame(r2m, r2c, f2m, f2c);
return (vals)
}
#%% EXCEL DATAFRAME
excel_df <- data.frame(cluster_num=double(),
group_char=character(),
model_char=character(),
kinematic_char=character(),
freq_band_char=character(),
mod_num_obs=character(),
coeff_chars=character(),
coeffs=character(),
confint_chars=character(),
emmeans=character(),
emmeans_se=character(),
confint_lwr=character(),
confint_upr=character(),
anv_chars=character(),
anv_pvals=character(),
anv_stats=character(),
anv_dfs=character(),
r2_m_int=double(),
r2_c_int=double(),
f2_m_int=double(),
f2_c_int=double(),
fsq_chars=character(),
fsq_vals=character(),
etasq_chars=character(),
etasq_vals=character(),
ran_effs_char=character(),
ran_effs_n=character())
ci = 5;
ei = 'theta_avg_power';
#%% HTML TAG
cat(paste0("\n\n## ", ci,',',ei,"\n"))
#%% SUBSET BY CLUSTER
tmpt <- filter_at(dtbl,vars('cluster_n'), any_vars(. %in% ci));
# -- remove NAN cases
# tmpt = tmpt[complete.cases(tmpt[[ki]]),];
#%% THAT ARE GREATER THAN OR LESS THAN 3STD FROM MEAN
#- mean & std cutoff
# muc = mean(tmpt[[ei]])
# stdc = sd(tmpt[[ei]])
# inds_keep = tmpt[[ei]] > muc-4*stdc & tmpt[[ei]] < muc+4*stdc
# tmpt = tmpt[inds_keep,]
#%% COMPUTE LME MODEL
mod_char = paste(ei," ~ 1 + speed_cond_num + group_char + (1|subj_char)");
mod <- lme4::lmer(str_glue(mod_char), data=tmpt);
tbl <- mod %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q()
#%% PRINT TABLE
t_out <- as_gt(tbl) %>%
gt::tab_header(title=c("Changes in ",ei,"for Cluster: ",ci)) %>%
gt::tab_options(table.layout = "fixed") %>%
gt::as_raw_html()
print(t_out)
#-- extract fixed & random effects coeffs
anv_vals <- car::Anova(mod,type=3)
fix_effs <- fixef(mod)
ran_effs <- ranef(mod)$subj_char
print(anv_vals);
#%% R-SQUARED VALUE
# r.squaredGLMM() %>%
#   print(str_glue("{outcome}\n R2m: {round(mod[1],4)},\tR2c: {round(mod[2],4)}\n\n"))
#%% EFFECT SIZES
cat(paste0("\n\n### model effect sizes\n"))
#-- Intercept Model for Cohen's f^2
print('intercept model\n');
mod_char_int = paste(ei," ~ 1 + (1|subj_char)");
tmp_mod = lme4::lmer(str_glue(mod_char_int), data=tmpt)
cf_alt = calc_cohensf2(mod, tmp_mod)
#-- calculate effect sizes using r-package
etasq_res <- effectsize::eta_squared(mod, partial = TRUE)
cohens_fsq_res <- effectsize::cohens_f_squared(mod, partial = TRUE)
#-- confidence intervals
summ <- summary(mod);
coeff_chars = row.names(summ$coefficients)
confintvs <- data.frame(emmeans::emmeans(mod,spec=c('speed_cond_num','group_char'),level=0.95))
#%% EXCEL PRINTS
new_row = data.frame(cluster_num=ci,
group_char=c('all'),
model_char=c('speed_group_all'),
kinematic_char=c('none'),
freq_band_char=c(ei),
mod_num_obs=nrow(tmpt),
coeff_chars=paste(unlist(coeff_chars),collapse=','),
coeffs=paste(unlist(mod@beta),collapse=','),
confint_chars=paste(unlist(confintvs$group_char),collapse=','),
emmeans=paste(unlist(as.numeric(confintvs$emmean)),collapse=','),
emmeans_se=paste(unlist(as.numeric(confintvs$SE)),collapse=','),
confint_lwr=paste(unlist(as.numeric(confintvs$lower.CL)),collapse=','),
confint_upr=paste(unlist(as.numeric(confintvs$upper.CL)),collapse=','),
anv_chars=paste(unlist(row.names(anv_vals)),collapse=','),
anv_pvals=paste(unlist(anv_vals$`Pr(>Chisq)`),collapse=','),
anv_stats=paste(unlist(anv_vals$Chisq),collapse=','),
anv_dfs=paste(unlist(anv_vals$Df),collapse=','),
r2_m_int=cf_alt$r2m,
r2_c_int=cf_alt$r2c,
f2_m_int=cf_alt$f2m,
f2_c_int=cf_alt$f2c,
fsq_chars=paste(unlist(cohens_fsq_res$Parameter),collapse=','),
fsq_vals=paste(unlist(cohens_fsq_res$Cohens_f2_partial),collapse=','),
etasq_chars=paste(unlist(etasq_res$Parameter),collapse=','),
etasq_vals=paste(unlist(etasq_res$Cohens_f2_partial),collapse=','),
ran_effs_char=paste(unlist(row.names(ran_effs)),collapse=','),
ran_effs_n=paste(unlist(ran_effs$`(Intercept)`),collapse=','))
excel_df <- rbind(excel_df,new_row)
#%% MODEL VALIDATION PLOTS
cat(paste0("\n\n### model validations\n"))
print(plot_model(mod, type = 'diag'))
cat("\n")
#%% MODEL VALIDATIONS
cat(paste0("\n\n### model validations\n"))
# print(plot_model(mod, type = 'diag'))
cat("\n")
tmpt$fit.m <- predict(mod, re.form = NA)
tmpt$fit.c <- predict(mod, re.form = NULL)
#%% VISUALIZATION OF MODELS
cat(paste0("\n\n### data plot\n"))
theme_set(theme_classic()) # This sets the default ggplot theme
print(
tmpt %>%
ggplot() +
geom_jitter(aes(x = speed_cond_num, y = .data[[ei]], color = subj_char), pch=20, size=10, alpha=0.2) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),linetype = "dashed", linewidth = .5) +
geom_line(aes(x= speed_cond_num, y=fit.m), linewidth = 2)+
geom_errorbar(data=confintvs,aes(x = speed_cond_num, ymin=lower.CL, ymax=upper.CL), width=0.33, linewidth=1.5, colour='red') +
facet_wrap(~group_char) +
ggtitle(eeg_title_chars[eis[i]])+
xlab("Treadmill Speed (m/s)") +
ylab(eeg_title_chars[eis[i]]) +
guides(group="none")
)
pwc
em = emmeans(mod,spec=c('speed_cond_num',,'group_char'))
em = emmeans(mod,spec=c('speed_cond_num','group_char'))
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
pwc
mod
emmeans::emmeans(mod,spec=c('group_char'),level=0.95)
emmeans::emmeans(mod,spec=c('speed_cond_num','group_char'),level=0.95)
contrast(em,method = "pairwise")
ci = 6;
#%% SUBSET BY CLUSTER
tmpt <- filter_at(dtbl,vars('cluster_n'), any_vars(. %in% ci));
# -- remove NAN cases
# tmpt = tmpt[complete.cases(tmpt[[ki]]),];
#%% THAT ARE GREATER THAN OR LESS THAN 3STD FROM MEAN
#- mean & std cutoff
# muc = mean(tmpt[[ei]])
# stdc = sd(tmpt[[ei]])
# inds_keep = tmpt[[ei]] > muc-4*stdc & tmpt[[ei]] < muc+4*stdc
# tmpt = tmpt[inds_keep,]
#%% COMPUTE LME MODEL
mod_char = paste(ei," ~ 1 + speed_cond_num + group_char + (1|subj_char)");
mod <- lme4::lmer(str_glue(mod_char), data=tmpt);
tbl <- mod %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q()
#%% PRINT TABLE
t_out <- as_gt(tbl) %>%
gt::tab_header(title=c("Changes in ",ei,"for Cluster: ",ci)) %>%
gt::tab_options(table.layout = "fixed") %>%
gt::as_raw_html()
print(t_out)
#-- extract fixed & random effects coeffs
anv_vals <- car::Anova(mod,type=3)
fix_effs <- fixef(mod)
ran_effs <- ranef(mod)$subj_char
print(anv_vals);
#%% R-SQUARED VALUE
# r.squaredGLMM() %>%
#   print(str_glue("{outcome}\n R2m: {round(mod[1],4)},\tR2c: {round(mod[2],4)}\n\n"))
#%% EFFECT SIZES
cat(paste0("\n\n### model effect sizes\n"))
#-- Intercept Model for Cohen's f^2
print('intercept model\n');
mod_char_int = paste(ei," ~ 1 + (1|subj_char)");
tmp_mod = lme4::lmer(str_glue(mod_char_int), data=tmpt)
cf_alt = calc_cohensf2(mod, tmp_mod)
#-- calculate effect sizes using r-package
etasq_res <- effectsize::eta_squared(mod, partial = TRUE)
cohens_fsq_res <- effectsize::cohens_f_squared(mod, partial = TRUE)
#-- confidence intervals
summ <- summary(mod);
coeff_chars = row.names(summ$coefficients)
confintvs <- data.frame(emmeans::emmeans(mod,spec=c('speed_cond_num','group_char'),level=0.95))
confintvs <- data.frame(emmeans::emmeans(mod,spec=c('group_char'),level=0.95))
#--
em = emmeans(mod,spec=c('speed_cond_num','group_char'))
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
#%% EXCEL PRINTS
new_row = data.frame(cluster_num=ci,
group_char=c('all'),
model_char=c('speed_group_all'),
kinematic_char=c('none'),
freq_band_char=c(ei),
mod_num_obs=nrow(tmpt),
coeff_chars=paste(unlist(coeff_chars),collapse=','),
coeffs=paste(unlist(mod@beta),collapse=','),
confint_chars=paste(unlist(confintvs$group_char),collapse=','),
emmeans=paste(unlist(as.numeric(confintvs$emmean)),collapse=','),
emmeans_se=paste(unlist(as.numeric(confintvs$SE)),collapse=','),
confint_lwr=paste(unlist(as.numeric(confintvs$lower.CL)),collapse=','),
confint_upr=paste(unlist(as.numeric(confintvs$upper.CL)),collapse=','),
anv_chars=paste(unlist(row.names(anv_vals)),collapse=','),
anv_pvals=paste(unlist(anv_vals$`Pr(>Chisq)`),collapse=','),
anv_stats=paste(unlist(anv_vals$Chisq),collapse=','),
anv_dfs=paste(unlist(anv_vals$Df),collapse=','),
r2_m_int=cf_alt$r2m,
r2_c_int=cf_alt$r2c,
f2_m_int=cf_alt$f2m,
f2_c_int=cf_alt$f2c,
fsq_chars=paste(unlist(cohens_fsq_res$Parameter),collapse=','),
fsq_vals=paste(unlist(cohens_fsq_res$Cohens_f2_partial),collapse=','),
etasq_chars=paste(unlist(etasq_res$Parameter),collapse=','),
etasq_vals=paste(unlist(etasq_res$Cohens_f2_partial),collapse=','),
ran_effs_char=paste(unlist(row.names(ran_effs)),collapse=','),
ran_effs_n=paste(unlist(ran_effs$`(Intercept)`),collapse=','))
excel_df <- rbind(excel_df,new_row)
#%% MODEL VALIDATION PLOTS
cat(paste0("\n\n### model validations\n"))
print(plot_model(mod, type = 'diag'))
cat("\n")
#%% MODEL VALIDATIONS
cat(paste0("\n\n### model validations\n"))
# print(plot_model(mod, type = 'diag'))
cat("\n")
tmpt$fit.m <- predict(mod, re.form = NA)
tmpt$fit.c <- predict(mod, re.form = NULL)
#%% VISUALIZATION OF MODELS
cat(paste0("\n\n### data plot\n"))
theme_set(theme_classic()) # This sets the default ggplot theme
print(
tmpt %>%
ggplot() +
geom_jitter(aes(x = speed_cond_num, y = .data[[ei]], color = subj_char), pch=20, size=10, alpha=0.2) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),linetype = "dashed", linewidth = .5) +
geom_line(aes(x= speed_cond_num, y=fit.m), linewidth = 2)+
geom_errorbar(data=confintvs,aes(x = speed_cond_num, ymin=lower.CL, ymax=upper.CL), width=0.33, linewidth=1.5, colour='red') +
facet_wrap(~group_char) +
ggtitle(eeg_title_chars[eis[i]])+
xlab("Treadmill Speed (m/s)") +
ylab(eeg_title_chars[eis[i]]) +
guides(group="none")
)
pwc
ci = 11;
#%% HTML TAG
cat(paste0("\n\n## ", ci,',',ei,"\n"))
#%% SUBSET BY CLUSTER
tmpt <- filter_at(dtbl,vars('cluster_n'), any_vars(. %in% ci));
# -- remove NAN cases
# tmpt = tmpt[complete.cases(tmpt[[ki]]),];
#%% THAT ARE GREATER THAN OR LESS THAN 3STD FROM MEAN
#- mean & std cutoff
# muc = mean(tmpt[[ei]])
# stdc = sd(tmpt[[ei]])
# inds_keep = tmpt[[ei]] > muc-4*stdc & tmpt[[ei]] < muc+4*stdc
# tmpt = tmpt[inds_keep,]
#%% COMPUTE LME MODEL
mod_char = paste(ei," ~ 1 + speed_cond_num + group_char + (1|subj_char)");
mod <- lme4::lmer(str_glue(mod_char), data=tmpt);
tbl <- mod %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q()
#%% PRINT TABLE
t_out <- as_gt(tbl) %>%
gt::tab_header(title=c("Changes in ",ei,"for Cluster: ",ci)) %>%
gt::tab_options(table.layout = "fixed") %>%
gt::as_raw_html()
print(t_out)
#-- extract fixed & random effects coeffs
anv_vals <- car::Anova(mod,type=3)
fix_effs <- fixef(mod)
ran_effs <- ranef(mod)$subj_char
print(anv_vals);
#%% R-SQUARED VALUE
# r.squaredGLMM() %>%
#   print(str_glue("{outcome}\n R2m: {round(mod[1],4)},\tR2c: {round(mod[2],4)}\n\n"))
#%% EFFECT SIZES
cat(paste0("\n\n### model effect sizes\n"))
#-- Intercept Model for Cohen's f^2
print('intercept model\n');
mod_char_int = paste(ei," ~ 1 + (1|subj_char)");
tmp_mod = lme4::lmer(str_glue(mod_char_int), data=tmpt)
cf_alt = calc_cohensf2(mod, tmp_mod)
#-- calculate effect sizes using r-package
etasq_res <- effectsize::eta_squared(mod, partial = TRUE)
cohens_fsq_res <- effectsize::cohens_f_squared(mod, partial = TRUE)
#-- confidence intervals
summ <- summary(mod);
coeff_chars = row.names(summ$coefficients)
confintvs <- data.frame(emmeans::emmeans(mod,spec=c('speed_cond_num','group_char'),level=0.95))
confintvs <- data.frame(emmeans::emmeans(mod,spec=c('group_char'),level=0.95))
#--
em = emmeans(mod,spec=c('speed_cond_num','group_char'))
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
#%% EXCEL PRINTS
new_row = data.frame(cluster_num=ci,
group_char=c('all'),
model_char=c('speed_group_all'),
kinematic_char=c('none'),
freq_band_char=c(ei),
mod_num_obs=nrow(tmpt),
coeff_chars=paste(unlist(coeff_chars),collapse=','),
coeffs=paste(unlist(mod@beta),collapse=','),
confint_chars=paste(unlist(confintvs$group_char),collapse=','),
emmeans=paste(unlist(as.numeric(confintvs$emmean)),collapse=','),
emmeans_se=paste(unlist(as.numeric(confintvs$SE)),collapse=','),
confint_lwr=paste(unlist(as.numeric(confintvs$lower.CL)),collapse=','),
confint_upr=paste(unlist(as.numeric(confintvs$upper.CL)),collapse=','),
anv_chars=paste(unlist(row.names(anv_vals)),collapse=','),
anv_pvals=paste(unlist(anv_vals$`Pr(>Chisq)`),collapse=','),
anv_stats=paste(unlist(anv_vals$Chisq),collapse=','),
anv_dfs=paste(unlist(anv_vals$Df),collapse=','),
r2_m_int=cf_alt$r2m,
r2_c_int=cf_alt$r2c,
f2_m_int=cf_alt$f2m,
f2_c_int=cf_alt$f2c,
fsq_chars=paste(unlist(cohens_fsq_res$Parameter),collapse=','),
fsq_vals=paste(unlist(cohens_fsq_res$Cohens_f2_partial),collapse=','),
etasq_chars=paste(unlist(etasq_res$Parameter),collapse=','),
etasq_vals=paste(unlist(etasq_res$Cohens_f2_partial),collapse=','),
ran_effs_char=paste(unlist(row.names(ran_effs)),collapse=','),
ran_effs_n=paste(unlist(ran_effs$`(Intercept)`),collapse=','))
excel_df <- rbind(excel_df,new_row)
#%% MODEL VALIDATION PLOTS
cat(paste0("\n\n### model validations\n"))
print(plot_model(mod, type = 'diag'))
cat("\n")
#%% MODEL VALIDATIONS
cat(paste0("\n\n### model validations\n"))
# print(plot_model(mod, type = 'diag'))
cat("\n")
tmpt$fit.m <- predict(mod, re.form = NA)
tmpt$fit.c <- predict(mod, re.form = NULL)
#%% VISUALIZATION OF MODELS
cat(paste0("\n\n### data plot\n"))
theme_set(theme_classic()) # This sets the default ggplot theme
print(
tmpt %>%
ggplot() +
geom_jitter(aes(x = speed_cond_num, y = .data[[ei]], color = subj_char), pch=20, size=10, alpha=0.2) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),linetype = "dashed", linewidth = .5) +
geom_line(aes(x= speed_cond_num, y=fit.m), linewidth = 2)+
geom_errorbar(data=confintvs,aes(x = speed_cond_num, ymin=lower.CL, ymax=upper.CL), width=0.33, linewidth=1.5, colour='red') +
facet_wrap(~group_char) +
ggtitle(eeg_title_chars[eis[i]])+
xlab("Treadmill Speed (m/s)") +
ylab(eeg_title_chars[eis[i]]) +
guides(group="none")
)
data.frame(emmeans::emmeans(mod,spec=c('speed_cond_num','group_char'),level=0.95))
pwc
em = emmeans(mod,spec=c('speed_cond_num','group_char'))
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
pwc
bfc
em = emmeans(mod,spec=c('group_char'))
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
pwc
bfc
em = emmeans(mod,spec=c('speed_cond_num','group_char'))
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
pwc
bfc
ci = 5;
#%% HTML TAG
cat(paste0("\n\n## ", ci,',',ei,"\n"))
#%% SUBSET BY CLUSTER
tmpt <- filter_at(dtbl,vars('cluster_n'), any_vars(. %in% ci));
# -- remove NAN cases
# tmpt = tmpt[complete.cases(tmpt[[ki]]),];
#%% THAT ARE GREATER THAN OR LESS THAN 3STD FROM MEAN
#- mean & std cutoff
# muc = mean(tmpt[[ei]])
# stdc = sd(tmpt[[ei]])
# inds_keep = tmpt[[ei]] > muc-4*stdc & tmpt[[ei]] < muc+4*stdc
# tmpt = tmpt[inds_keep,]
#%% COMPUTE LME MODEL
mod_char = paste(ei," ~ 1 + speed_cond_num + group_char + (1|subj_char)");
mod <- lme4::lmer(str_glue(mod_char), data=tmpt);
tbl <- mod %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q()
#%% PRINT TABLE
t_out <- as_gt(tbl) %>%
gt::tab_header(title=c("Changes in ",ei,"for Cluster: ",ci)) %>%
gt::tab_options(table.layout = "fixed") %>%
gt::as_raw_html()
print(t_out)
#-- extract fixed & random effects coeffs
anv_vals <- car::Anova(mod,type=3)
fix_effs <- fixef(mod)
ran_effs <- ranef(mod)$subj_char
print(anv_vals);
#%% R-SQUARED VALUE
# r.squaredGLMM() %>%
#   print(str_glue("{outcome}\n R2m: {round(mod[1],4)},\tR2c: {round(mod[2],4)}\n\n"))
#%% EFFECT SIZES
cat(paste0("\n\n### model effect sizes\n"))
#-- Intercept Model for Cohen's f^2
print('intercept model\n');
mod_char_int = paste(ei," ~ 1 + (1|subj_char)");
tmp_mod = lme4::lmer(str_glue(mod_char_int), data=tmpt)
cf_alt = calc_cohensf2(mod, tmp_mod)
#-- calculate effect sizes using r-package
etasq_res <- effectsize::eta_squared(mod, partial = TRUE)
cohens_fsq_res <- effectsize::cohens_f_squared(mod, partial = TRUE)
#-- confidence intervals
summ <- summary(mod);
coeff_chars = row.names(summ$coefficients)
confintvs <- data.frame(emmeans::emmeans(mod,spec=c('speed_cond_num','group_char'),level=0.95))
# confintvs <- data.frame(emmeans::emmeans(mod,spec=c('group_char'),level=0.95))
#--
em = emmeans(mod,spec=c('speed_cond_num','group_char'))
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
#%% EXCEL PRINTS
new_row = data.frame(cluster_num=ci,
group_char=c('all'),
model_char=c('speed_group_all'),
kinematic_char=c('none'),
freq_band_char=c(ei),
mod_num_obs=nrow(tmpt),
coeff_chars=paste(unlist(coeff_chars),collapse=','),
coeffs=paste(unlist(mod@beta),collapse=','),
confint_chars=paste(unlist(confintvs$group_char),collapse=','),
emmeans=paste(unlist(as.numeric(confintvs$emmean)),collapse=','),
emmeans_se=paste(unlist(as.numeric(confintvs$SE)),collapse=','),
confint_lwr=paste(unlist(as.numeric(confintvs$lower.CL)),collapse=','),
confint_upr=paste(unlist(as.numeric(confintvs$upper.CL)),collapse=','),
anv_chars=paste(unlist(row.names(anv_vals)),collapse=','),
anv_pvals=paste(unlist(anv_vals$`Pr(>Chisq)`),collapse=','),
anv_stats=paste(unlist(anv_vals$Chisq),collapse=','),
anv_dfs=paste(unlist(anv_vals$Df),collapse=','),
r2_m_int=cf_alt$r2m,
r2_c_int=cf_alt$r2c,
f2_m_int=cf_alt$f2m,
f2_c_int=cf_alt$f2c,
fsq_chars=paste(unlist(cohens_fsq_res$Parameter),collapse=','),
fsq_vals=paste(unlist(cohens_fsq_res$Cohens_f2_partial),collapse=','),
etasq_chars=paste(unlist(etasq_res$Parameter),collapse=','),
etasq_vals=paste(unlist(etasq_res$Cohens_f2_partial),collapse=','),
ran_effs_char=paste(unlist(row.names(ran_effs)),collapse=','),
ran_effs_n=paste(unlist(ran_effs$`(Intercept)`),collapse=','))
excel_df <- rbind(excel_df,new_row)
#%% MODEL VALIDATION PLOTS
cat(paste0("\n\n### model validations\n"))
print(plot_model(mod, type = 'diag'))
cat("\n")
#%% MODEL VALIDATIONS
cat(paste0("\n\n### model validations\n"))
# print(plot_model(mod, type = 'diag'))
cat("\n")
tmpt$fit.m <- predict(mod, re.form = NA)
tmpt$fit.c <- predict(mod, re.form = NULL)
#%% VISUALIZATION OF MODELS
cat(paste0("\n\n### data plot\n"))
theme_set(theme_classic()) # This sets the default ggplot theme
print(
tmpt %>%
ggplot() +
geom_jitter(aes(x = speed_cond_num, y = .data[[ei]], color = subj_char), pch=20, size=10, alpha=0.2) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),linetype = "dashed", linewidth = .5) +
geom_line(aes(x= speed_cond_num, y=fit.m), linewidth = 2)+
geom_errorbar(data=confintvs,aes(x = speed_cond_num, ymin=lower.CL, ymax=upper.CL), width=0.33, linewidth=1.5, colour='red') +
facet_wrap(~group_char) +
ggtitle(eeg_title_chars[eis[i]])+
xlab("Treadmill Speed (m/s)") +
ylab(eeg_title_chars[eis[i]]) +
guides(group="none")
)
pwc
fext = 'speed_manu_tests';
# excel_dir <- paste0("/jsalminen/GitHub/MIND_IN_MOTION_PRJ/MindInMotion_YoungerOlderAdults_BrainSpeedChanges/src/r_scripts/eeg_speed_lmes/fooof_spec_table.xlsx")
excel_dir <- "/jsalminen/GitHub/MIND_IN_MOTION_PRJ/_data/MIM_dataset/_studies/02202025_mim_yaoa_powpow0p3_crit_speed/__iclabel_cluster_kmeansalt_rb3/icrej_5/11/spca_fooof_psd_anl/fooof_spec_table.xlsx"
if(ispc()){
excel_dir <- paste0("M:",excel_dir)
}else{
excel_dir <- paste0("/blue/dferris",excel_dir);
}
orig_eegt <- read_excel(excel_dir,sheet="Sheet1")
#%% SUBSET
orig_eegt <- orig_eegt %>%
select(subj_char,cond_char,group_id,group_char,cluster_id,design_id,
theta_avg_power,alpha_avg_power,beta_avg_power,
);
